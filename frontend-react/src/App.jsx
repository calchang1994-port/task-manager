import { useEffect, useState } from 'react'
import { api, getApiBase } from './api.js'
export default function App(){const [name,setName]=useState('');const [email,setEmail]=useState('');const [password,setPassword]=useState('');const [title,setTitle]=useState('');const [due,setDue]=useState('');const [tasks,setTasks]=useState([]);const [apiBase,setApiBase]=useState(getApiBase());useEffect(()=>{fetchTasks().catch(()=>{})},[]);async function register(){try{await api('/api/auth/register',{method:'POST',body:JSON.stringify({name,email,password})});alert('Registered! Now log in.')}catch(e){alert(e.message)}}async function login(){try{const data=await api('/api/auth/login',{method:'POST',body:JSON.stringify({email,password})});localStorage.setItem('token',data.token);await fetchTasks()}catch(e){alert(e.message)}}function logout(){localStorage.removeItem('token');setTasks([])}async function fetchTasks(){try{const data=await api('/api/tasks');setTasks(data)}catch(e){}}async function addTask(){try{await api('/api/tasks',{method:'POST',body:JSON.stringify({title,dueDate:due||undefined})});setTitle('');setDue('');await fetchTasks()}catch(e){alert(e.message)}}async function toggleDone(id,completed){try{await api('/api/tasks/'+id,{method:'PATCH',body:JSON.stringify({completed})});await fetchTasks()}catch(e){alert(e.message)}}async function removeTask(id){try{await api('/api/tasks/'+id,{method:'DELETE'});await fetchTasks()}catch(e){alert(e.message)}}function saveApiBase(){localStorage.setItem('api',apiBase);alert('API base saved: '+apiBase)}return (<div className='container'><h1>Task Manager (React)</h1><div className='card'><p className='small'>API: {apiBase}</p><div className='row'><input value={apiBase} onChange={e=>setApiBase(e.target.value)} placeholder='API base (e.g., http://localhost:8080)'/><button onClick={saveApiBase}>Save API Base</button></div></div><div className='card'><h2>Auth</h2><div className='row'><input value={name} onChange={e=>setName(e.target.value)} placeholder='Name (register)'/><input value={email} onChange={e=>setEmail(e.target.value)} placeholder='Email'/><input value={password} onChange={e=>setPassword(e.target.value)} type='password' placeholder='Password'/></div><div className='row'><button onClick={register}>Register</button><button onClick={login}>Login</button><button onClick={logout}>Logout</button></div></div><div className='card'><h2>Tasks</h2><div className='row'><input value={title} onChange={e=>setTitle(e.target.value)} placeholder='New task title'/><input value={due} onChange={e=>setDue(e.target.value)} type='date'/><button onClick={addTask}>Add Task</button></div><ul>{tasks.length===0 && <p className='small'>No tasks yet.</p>}{tasks.map(t=>(<li key={t._id}><div><span className={t.completed?'done':''}>{t.title}{t.dueDate?` (due ${new Date(t.dueDate).toLocaleDateString()})`:''}</span></div><div className='row'><button onClick={()=>toggleDone(t._id,!t.completed)}>{t.completed?'Mark Active':'Mark Done'}</button><button onClick={()=>removeTask(t._id)}>Delete</button></div></li>))}</ul></div></div>)}
